// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oiski.H2_2021.BookStore.DataLayer;

namespace Oiski.H2_2021.BookStore.DataLayer.Migrations
{
    [DbContext(typeof(BookstoreContext))]
    partial class BookstoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Oiski.H2_2021.BookStore.DataLayer.Entities.Author", b =>
                {
                    b.Property<int>("AuthorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorID");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorID = 1,
                            Name = "Marting Fowler"
                        },
                        new
                        {
                            AuthorID = 2,
                            Name = "Eric Evans"
                        },
                        new
                        {
                            AuthorID = 3,
                            Name = "Future Person"
                        });
                });

            modelBuilder.Entity("Oiski.H2_2021.BookStore.DataLayer.Entities.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PriceOfferID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookID = 1,
                            Description = "Improving the design of the exsisting code",
                            Price = 40m,
                            PriceOfferID = 0,
                            PublishedOn = new DateTime(1999, 7, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            SoftDeleted = false,
                            Title = "Refactoring"
                        },
                        new
                        {
                            BookID = 2,
                            Description = "Written in direct response to the stuff challenges",
                            Price = 53m,
                            PriceOfferID = 0,
                            PublishedOn = new DateTime(2002, 11, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            SoftDeleted = false,
                            Title = "Patterns of Enterprise Application Architecture"
                        },
                        new
                        {
                            BookID = 3,
                            Description = "Linking business needs to software design",
                            Price = 56m,
                            PriceOfferID = 0,
                            PublishedOn = new DateTime(2003, 8, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            SoftDeleted = false,
                            Title = "Domain-Driven Design"
                        },
                        new
                        {
                            BookID = 4,
                            Description = "Entangled quantum netorking provides faster-than-light data communications",
                            Price = 220m,
                            PriceOfferID = 0,
                            PublishedOn = new DateTime(2057, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            SoftDeleted = false,
                            Title = "Quantum Networking"
                        });
                });

            modelBuilder.Entity("Oiski.H2_2021.BookStore.DataLayer.Entities.BookAuthor", b =>
                {
                    b.Property<int>("AuthorID")
                        .HasColumnType("int");

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<byte>("Order")
                        .HasColumnType("tinyint");

                    b.HasKey("AuthorID", "BookID");

                    b.HasIndex("BookID");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            AuthorID = 1,
                            BookID = 1,
                            Order = (byte)0
                        },
                        new
                        {
                            AuthorID = 2,
                            BookID = 1,
                            Order = (byte)0
                        },
                        new
                        {
                            AuthorID = 1,
                            BookID = 2,
                            Order = (byte)0
                        },
                        new
                        {
                            AuthorID = 2,
                            BookID = 3,
                            Order = (byte)0
                        },
                        new
                        {
                            AuthorID = 3,
                            BookID = 4,
                            Order = (byte)0
                        });
                });

            modelBuilder.Entity("Oiski.H2_2021.BookStore.DataLayer.Entities.PriceOffer", b =>
                {
                    b.Property<int>("PriceOfferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PromotionalText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriceOfferID");

                    b.HasIndex("BookID")
                        .IsUnique();

                    b.ToTable("PriceOffers");
                });

            modelBuilder.Entity("Oiski.H2_2021.BookStore.DataLayer.Entities.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumStars")
                        .HasColumnType("int");

                    b.Property<string>("VoterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewID");

                    b.HasIndex("BookID");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            ReviewID = 1,
                            BookID = 1,
                            Comment = "Great Book",
                            NumStars = 3
                        },
                        new
                        {
                            ReviewID = 2,
                            BookID = 1,
                            Comment = "Boring Book",
                            NumStars = 1
                        });
                });

            modelBuilder.Entity("Oiski.H2_2021.BookStore.DataLayer.Entities.BookAuthor", b =>
                {
                    b.HasOne("Oiski.H2_2021.BookStore.DataLayer.Entities.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oiski.H2_2021.BookStore.DataLayer.Entities.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Oiski.H2_2021.BookStore.DataLayer.Entities.PriceOffer", b =>
                {
                    b.HasOne("Oiski.H2_2021.BookStore.DataLayer.Entities.Book", "Book")
                        .WithOne("PriceOffer")
                        .HasForeignKey("Oiski.H2_2021.BookStore.DataLayer.Entities.PriceOffer", "BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Oiski.H2_2021.BookStore.DataLayer.Entities.Review", b =>
                {
                    b.HasOne("Oiski.H2_2021.BookStore.DataLayer.Entities.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Oiski.H2_2021.BookStore.DataLayer.Entities.Author", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("Oiski.H2_2021.BookStore.DataLayer.Entities.Book", b =>
                {
                    b.Navigation("BookAuthors");

                    b.Navigation("PriceOffer");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
